defaultTasks 'dist'

//definition of subprojects
subprojects {
	apply plugin: 'java'
	
	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'
	
	sourceCompatibility = 6
	
	repositories {
		mavenCentral()
	}
	
	//additional configurations for compile classpaths
	configurations {
		compileOnly
		testCompileOnly { extendsFrom compileOnly }
	}
	
	dependencies {
		compile files('../utils/build/dist/onejar/utils.jar')
		compile group: "org.projectlombok", name: "lombok", version: "1.16.2"
		testCompile group: 'junit', name: 'junit', version: '4.+'
	}

	sourceSets {
		main {
			java { srcDir 'src' }
			resources { srcDir 'src' }
			compileClasspath += configurations.compileOnly
		}
		test {
			java { srcDir 'test' }
			resources { srcDir 'test' }
			compileClasspath += configurations.compileOnly + configurations.testCompileOnly
		}
	}

	jar {
		from 'license.txt'
		from 'readme.txt'
		manifest.attributes 'Created-By': 'Xenoage Software'
	}
}

//project dependencies
project(':converter') { dependencies { compile project(':desktop') } }
project(':demos') {
	sourceCompatibility = 8
	dependencies { compile project(':desktop') }
}
project(':desktop') {
	sourceCompatibility = 8
	dependencies {
		compile project(':renderer-awt'), project(':renderer-javafx'), project(':midi-out'), project(':musicxml-in')
		compile group: "org.controlsfx", name: "controlsfx", version: "8.20.7"
		compile group: "com.itextpdf", name: "itextpdf", version: "5.4.5"
		compile files('../lib/lib/vorbis-java-1.0.0-beta.jar')
	}
}
project(':renderer-awt') {
	sourceCompatibility = 8
	dependencies {
		compile project(':renderer')
	}
}
project(':renderer-javafx') {
	sourceCompatibility = 8
	dependencies {
		compile project(':renderer')
	}
}
project(':layout') { dependencies { compile project(':core') } }
project(':midi-out') { dependencies { compile project(':core') } }
project(':musicxml') { dependencies { compile project(':core') } }
project(':musicxml-in') { dependencies { compile project(':musicxml') } }
project(':player') {
	sourceCompatibility = 8
	dependencies { compile project(':desktop') }
}
project(':renderer') { dependencies { compile project(':layout') } }
project(':test') {
	sourceCompatibility = 8
	dependencies {
		compile project(':converter'), project(':webserver')
		compile files('../lib/lib/dev/cpsuite-1.2.6.jar')
	}
}
project(':tools') { dependencies { compile project(':core') } }
project(':webserver') {
	dependencies {
		compile project(':desktop')
		compile group: "com.google.code.gson", name: "gson", version: "2.2.4"
		compile group: "com.h2database", name: "h2", version: "1.3.174"
		compile group: "org.eclipse.jetty", name: "jetty-server", version: "9.1.0.v20131115"
		compile group: "org.eclipse.jetty", name: "jetty-servlet", version: "9.1.0.v20131115"
	}
}

//update lib
task updateLib {
	println 'Update libraries'
	ant.java(jar:"lib/sync.jar", fork:true, dir:"lib")
}

//build dist of Zong!
task dist {
	//update libraries
	dependsOn updateLib
	//first, build utils
	dependsOn 'buildUtils'
	//then, build the subprojects
	dependsOn subprojects*.build
}

//clean Zong!
task clean {
	//also clean Xenoage Utils
	dependsOn 'cleanUtils'
}

//build dist of Xenoage Utils
task buildUtils(type: GradleBuild) {
	buildFile = 'utils/build.gradle'
}

//build dist of Xenoage Utils
task cleanUtils(type: GradleBuild) {
	buildFile = 'utils/build.gradle'
	tasks = ['clean']
}

//TODO
task distPlayer(type: Jar) {
	dependsOn dist
	
	subprojects.each() { subproject ->
		ext.jarDir = "${subproject.name}/build/libs/"
		from (zipTree(ext.jarDir + subproject.name + ".jar")) { exclude 'license.txt' }
		from (zipTree(ext.jarDir + subproject.name + ".jar")) { include 'license.txt' into("licenses/${subproject.name}/") }
	};
	from 'license.txt'
	destinationDir = file("build/dist/onejar")
	archiveName = 'utils.jar'
	manifest.attributes 'Created-By': 'Xenoage Software'
}

//create JavaDoc using Ant task
ant.importBuild 'javadoc.build.xml'
task createDoc {
	dependsOn antZongJavadoc
}